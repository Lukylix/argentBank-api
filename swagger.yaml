openapi: 3.0.1
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  termsOfService: http://swagger.io/terms/
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      requestBody:
        description: Login Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
        required: true
      responses:
        200:
          description: Login Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      x-codegen-request-body-name: body
  /user/signup:
    post:
      tags:
        - Internal Module
      summary: Signup
      description: API for Signup
      requestBody:
        description: Signup Payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
        required: true
      responses:
        200:
          description: Signup Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - Internal: []
      x-codegen-request-body-name: body
  /user/profile:
    get:
      tags:
        - User Module
      summary: User Profile API
      description: API to get user profile
      responses:
        200:
          description: User profile retrieved successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - UserAuth: []
    put:
      tags:
        - User Module
      summary: User Profile API
      description: API for updating user profile
      requestBody:
        description: Update user profile attributes
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserModify"
        required: true
      responses:
        200:
          description: User profile retrieved successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - UserAuth: []
      x-codegen-request-body-name: body
  /user/accounts:
    get:
      tags:
        - User Module
      summary: User Accounts API
      description: API to get a user bank accounts
      responses:
        200:
          description: User Accounts retrieved successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccountsResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - UserAuth: []
    post:
      tags:
        - Internal Module
      summary: User Accounts API
      description: API to create a user bank account
      requestBody:
        description: Create account attributes
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccountCreate"
        required: true
      responses:
        200:
          description: User Accounts created successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccountResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - Internal: []
      x-codegen-request-body-name: body
  /user/accounts/{accountId}:
    put:
      tags:
        - Internal Module
      summary: User Accounts API
      description: API to disable or enable user bank account
      parameters:
        - name: accountId
          in: path
          description: ID of the account to modify
          required: true
          schema:
            type: string
      requestBody:
        description: Update account attributes
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccountModify"
        required: true
      responses:
        200:
          description: Account successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccountResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - Internal: []
      x-codegen-request-body-name: body
  /user/accounts/{accountId}/transactions{?page}:
    get:
      tags:
        - User Module
      summary: User Accounts Transactions API
      description: API to get a user bank account transactions
      parameters:
        - name: accountId
          in: path
          description: ID of the account to get associated transaction
          required: true
          schema:
            type: string
        - name: page
          in: querry
          description: Desired page number (20 transactions per page)
      responses:
        200:
          description: User Accounts Transactions retrieved successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccountsTransactionsResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - UserAuth: []
      x-codegen-request-body-name: body
  /user/accounts/{accountId}/transactions:
    post:
      tags:
        - Internal Module
      summary: User Accounts Transactions API
      description: API to create user bank account transaction
      parameters:
        - name: accountId
          in: path
          description: ID of the account to get associated transaction
          required: true
          schema:
            type: string
      requestBody:
        description: Update transaction attributes
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccountsTransactionCreate"
        required: true
      responses:
        200:
          description: Transaction successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccountsTransactionResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - Internal: []
      x-codegen-request-body-name: body
  /user/accounts/{accountId}/transactions/{transactionId}:
    put:
      tags:
        - User Module
      summary: User Accounts Transactions API
      description: API to modify a user bank account transaction
      parameters:
        - name: accountId
          in: path
          description: ID of the account to get associated transaction
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: ID oh the transaction to modify
          required: true
          schema:
            type: string
      requestBody:
        description: Update transaction attributes
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccountsTransactionUpdate"
        required: true
      responses:
        200:
          description: Transaction updated successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccountsTransactionResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - UserAuth: []
      x-codegen-request-body-name: body
  /categories:
    get:
      tags:
        - User Module
      summary: Transactions Categories API
      description: API to get transactions categories
      responses:
        200:
          description: Categories retrived successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - UserAuth: []
      x-codegen-request-body-name: body
    post:
      tags:
        - Internal Module
      summary: Transactions Categories API
      description: API to create transactions category
      requestBody:
        description: Create transaction category
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        200:
          description: Category created successully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryResponse"
        400:
          description: Invalid Field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorReponse"
        401:
          description: Authorization is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401ErrorReponse"
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorReponse"
      security:
        - Internal: []
      x-codegen-request-body-name: body
components:
  securitySchemes:
    UserAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    Internal:
      name: authorization
      type: apiKey
      in: header
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          example: tony@stark.com
          description: user email
        password:
          type: string
          format: password
          description: user password
    LoginResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: object
          properties:
            token:
              type: string
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          example: tony@stark.com
          description: user email
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
    UserModify:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    UserResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
              format: uuid
            email:
              type: string
              format: email
            firstName:
              type: string
            lastName:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    UserAccountCreate:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        type:
          type: string
    UserAccountModify:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
    UserAccountResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
              format: uuid
            userId:
              type: string
              format: uuid
            type:
              type: string
            amount:
              type: number
              format: float
            transactions:
              type: number
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            disabled:
              type: boolean
              example: false
    UserAccountsResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              userId:
                type: string
                format: uuid
              type:
                type: string
              amount:
                type: number
                format: float
              transactions:
                type: number
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              disabled:
                type: boolean
                example: false
    UserAccountsTransactionCreate:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        description:
          type: string
        amount:
          type: number
          format: float
        balance:
          type: number
          format: float
        type:
          type: string
        categoryId:
          type: string
          format: uuid
        note:
          type: string
    UserAccountsTransactionUpdate:
      type: object
      properties:
        categoryId:
          type: string
          format: uuid
        note:
          type: string
    UserAccountsTransactionResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
              format: uuid
            userId:
              type: string
              format: uuid
            accountId:
              type: string
              format: uuid
            description:
              type: string
            amount:
              type: number
              format: float
            balance:
              type: number
              format: float
            type:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            category:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
            note:
              type: string
    UserAccountsTransactionsResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: object
          properties:
            total:
              type: number
              exemple: 484
            page:
              type: number
              example: 1
            totalPage:
              type: number
              example: 25
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  userId:
                    type: string
                    format: uuid
                  accountId:
                    type: string
                    format: uuid
                  description:
                    type: string
                  amount:
                    type: number
                    format: float
                  balance:
                    type: number
                    format: float
                  type:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  category:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                  note:
                    type: string
    Category:
      type: object
      properties:
        name:
          type: string
    CategoryResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
    CategoriesResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
    401ErrorReponse:
      type: object
      properties:
        status:
          type: integer
          example: 401
        message:
          type: string
    400ErrorReponse:
      type: object
      properties:
        status:
          type: integer
          example: 400
        message:
          type: string
    500ErrorReponse:
      type: object
      properties:
        status:
          type: integer
          example: 500
        message:
          type: string
